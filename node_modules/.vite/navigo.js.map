{
  "version": 3,
  "sources": ["../navigo/lib/es/constants.js", "../navigo/lib/es/utils.js", "../navigo/lib/es/Q.js", "../navigo/lib/es/middlewares/setLocationPath.js", "../navigo/lib/es/middlewares/matchPathToRegisteredRoutes.js", "../navigo/lib/es/middlewares/checkForDeprecationMethods.js", "../navigo/lib/es/middlewares/checkForForceOp.js", "../navigo/lib/es/middlewares/updateBrowserURL.js", "../navigo/lib/es/middlewares/checkForLeaveHook.js", "../navigo/lib/es/middlewares/checkForBeforeHook.js", "../navigo/lib/es/middlewares/callHandler.js", "../navigo/lib/es/middlewares/checkForAfterHook.js", "../navigo/lib/es/middlewares/checkForAlreadyHook.js", "../navigo/lib/es/middlewares/checkForNotFoundHandler.js", "../navigo/lib/es/middlewares/errorOut.js", "../navigo/lib/es/middlewares/flushCurrent.js", "../navigo/lib/es/middlewares/updateState.js", "../navigo/lib/es/lifecycles.js", "../navigo/lib/es/middlewares/processMatches.js", "../navigo/lib/es/middlewares/waitingList.js", "../navigo/lib/es/index.js", "dep:navigo"],
  "sourcesContent": ["export var PARAMETER_REGEXP = /([:*])(\\w+)/g;\nexport var REPLACE_VARIABLE_REGEXP = \"([^/]+)\";\nexport var WILDCARD_REGEXP = /\\*/g;\nexport var REPLACE_WILDCARD = \"?(?:.*)\";\nexport var NOT_SURE_REGEXP = /\\/\\?/g;\nexport var REPLACE_NOT_SURE = \"/?([^/]+|)\";\nexport var START_BY_SLASH_REGEXP = \"(?:/^|^)\";\nexport var MATCH_REGEXP_FLAGS = \"\";", "import { PARAMETER_REGEXP, WILDCARD_REGEXP, REPLACE_VARIABLE_REGEXP, REPLACE_WILDCARD, START_BY_SLASH_REGEXP, MATCH_REGEXP_FLAGS, REPLACE_NOT_SURE, NOT_SURE_REGEXP } from \"./constants\";\nexport function getCurrentEnvURL(fallback) {\n  if (fallback === void 0) {\n    fallback = \"/\";\n  }\n\n  if (windowAvailable()) {\n    return location.pathname + location.search + location.hash;\n  }\n\n  return fallback;\n}\nexport function clean(s) {\n  return s.replace(/\\/+$/, \"\").replace(/^\\/+/, \"\");\n}\nexport function isString(s) {\n  return typeof s === \"string\";\n}\nexport function isFunction(s) {\n  return typeof s === \"function\";\n}\nexport function extractHashFromURL(url) {\n  if (url && url.indexOf(\"#\") >= 0) {\n    return url.split(\"#\").pop() || \"\";\n  }\n\n  return \"\";\n}\nexport function regExpResultToParams(match, names) {\n  if (names.length === 0) return null;\n  if (!match) return null;\n  return match.slice(1, match.length).reduce(function (params, value, index) {\n    if (params === null) params = {};\n    params[names[index]] = decodeURIComponent(value);\n    return params;\n  }, null);\n}\nexport function extractGETParameters(url) {\n  var tmp = clean(url).split(/\\?(.*)?$/);\n  return [clean(tmp[0]), tmp.slice(1).join(\"\")];\n}\nexport function parseQuery(queryString) {\n  var query = {};\n  var pairs = queryString.split(\"&\");\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split(\"=\");\n\n    if (pair[0] !== \"\") {\n      var key = decodeURIComponent(pair[0]);\n\n      if (!query[key]) {\n        query[key] = decodeURIComponent(pair[1] || \"\");\n      } else {\n        if (!Array.isArray(query[key])) query[key] = [query[key]];\n        query[key].push(decodeURIComponent(pair[1] || \"\"));\n      }\n    }\n  }\n\n  return query;\n}\nexport function matchRoute(context, route) {\n  var _extractGETParameters = extractGETParameters(clean(context.currentLocationPath)),\n      current = _extractGETParameters[0],\n      GETParams = _extractGETParameters[1];\n\n  var params = GETParams === \"\" ? null : parseQuery(GETParams);\n  var paramNames = [];\n  var pattern;\n\n  if (isString(route.path)) {\n    pattern = START_BY_SLASH_REGEXP + clean(route.path).replace(PARAMETER_REGEXP, function (full, dots, name) {\n      paramNames.push(name);\n      return REPLACE_VARIABLE_REGEXP;\n    }).replace(WILDCARD_REGEXP, REPLACE_WILDCARD).replace(NOT_SURE_REGEXP, REPLACE_NOT_SURE) + \"$\";\n\n    if (clean(route.path) === \"\") {\n      if (clean(current) === \"\") {\n        return {\n          url: current,\n          queryString: GETParams,\n          hashString: extractHashFromURL(context.to),\n          route: route,\n          data: null,\n          params: params\n        };\n      }\n    }\n  } else {\n    pattern = route.path;\n  }\n\n  var regexp = new RegExp(pattern, MATCH_REGEXP_FLAGS);\n  var match = current.match(regexp);\n\n  if (match) {\n    var data = isString(route.path) ? regExpResultToParams(match, paramNames) : match.groups ? match.groups : match.slice(1);\n    return {\n      url: clean(current.replace(new RegExp(\"^\" + context.instance.root), \"\")),\n      queryString: GETParams,\n      hashString: extractHashFromURL(context.to),\n      route: route,\n      data: data,\n      params: params\n    };\n  }\n\n  return false;\n}\nexport function pushStateAvailable() {\n  return !!(typeof window !== \"undefined\" && window.history && window.history.pushState);\n}\nexport function undefinedOrTrue(obj, key) {\n  return typeof obj[key] === \"undefined\" || obj[key] === true;\n}\nexport function parseNavigateOptions(source) {\n  if (!source) return {};\n  var pairs = source.split(\",\");\n  var options = {};\n  var resolveOptions;\n  pairs.forEach(function (str) {\n    var temp = str.split(\":\").map(function (v) {\n      return v.replace(/(^ +| +$)/g, \"\");\n    });\n\n    switch (temp[0]) {\n      case \"historyAPIMethod\":\n        options.historyAPIMethod = temp[1];\n        break;\n\n      case \"resolveOptionsStrategy\":\n        if (!resolveOptions) resolveOptions = {};\n        resolveOptions.strategy = temp[1];\n        break;\n\n      case \"resolveOptionsHash\":\n        if (!resolveOptions) resolveOptions = {};\n        resolveOptions.hash = temp[1] === \"true\";\n        break;\n\n      case \"updateBrowserURL\":\n      case \"callHandler\":\n      case \"updateState\":\n      case \"force\":\n        options[temp[0]] = temp[1] === \"true\";\n        break;\n    }\n  });\n\n  if (resolveOptions) {\n    options.resolveOptions = resolveOptions;\n  }\n\n  return options;\n}\nexport function windowAvailable() {\n  return typeof window !== \"undefined\";\n}\nexport function accumulateHooks(hooks, result) {\n  if (hooks === void 0) {\n    hooks = [];\n  }\n\n  if (result === void 0) {\n    result = {};\n  }\n\n  hooks.filter(function (h) {\n    return h;\n  }).forEach(function (h) {\n    [\"before\", \"after\", \"already\", \"leave\"].forEach(function (type) {\n      if (h[type]) {\n        if (!result[type]) result[type] = [];\n        result[type].push(h[type]);\n      }\n    });\n  });\n  return result;\n}", "export default function Q(funcs, c, done) {\n  var context = c || {};\n  var idx = 0;\n\n  (function next() {\n    if (!funcs[idx]) {\n      if (done) {\n        done(context);\n      }\n\n      return;\n    }\n\n    if (Array.isArray(funcs[idx])) {\n      funcs.splice.apply(funcs, [idx, 1].concat(funcs[idx][0](context) ? funcs[idx][1] : funcs[idx][2]));\n      next();\n    } else {\n      // console.log(funcs[idx].name + \" / \" + JSON.stringify(context));\n      // console.log(funcs[idx].name);\n      funcs[idx](context, function (moveForward) {\n        if (typeof moveForward === \"undefined\" || moveForward === true) {\n          idx += 1;\n          next();\n        } else if (done) {\n          done(context);\n        }\n      });\n    }\n  })();\n}\n\nQ[\"if\"] = function (condition, one, two) {\n  if (!Array.isArray(one)) one = [one];\n  if (!Array.isArray(two)) two = [two];\n  return [condition, one, two];\n};", "import { getCurrentEnvURL } from \"../utils\";\nexport default function setLocationPath(context, done) {\n  if (typeof context.currentLocationPath === \"undefined\") {\n    context.currentLocationPath = context.to = getCurrentEnvURL(context.instance.root);\n  }\n\n  context.currentLocationPath = context.instance._checkForAHash(context.currentLocationPath);\n  done();\n}", "import { matchRoute } from \"../utils\";\nexport default function matchPathToRegisteredRoutes(context, done) {\n  for (var i = 0; i < context.instance.routes.length; i++) {\n    var route = context.instance.routes[i];\n    var match = matchRoute(context, route);\n\n    if (match) {\n      if (!context.matches) context.matches = [];\n      context.matches.push(match);\n\n      if (context.resolveOptions.strategy === \"ONE\") {\n        done();\n        return;\n      }\n    }\n  }\n\n  done();\n}", "export default function checkForDeprecationMethods(context, done) {\n  if (context.navigateOptions) {\n    if (typeof context.navigateOptions[\"shouldResolve\"] !== \"undefined\") {\n      console.warn(\"\\\"shouldResolve\\\" is deprecated. Please check the documentation.\");\n    }\n\n    if (typeof context.navigateOptions[\"silent\"] !== \"undefined\") {\n      console.warn(\"\\\"silent\\\" is deprecated. Please check the documentation.\");\n    }\n  }\n\n  done();\n}", "export default function checkForForceOp(context, done) {\n  if (context.navigateOptions.force === true) {\n    context.instance._setCurrent([context.instance._pathToMatchObject(context.to)]);\n\n    done(false);\n  } else {\n    done();\n  }\n}", "import { undefinedOrTrue, pushStateAvailable, windowAvailable } from \"../utils\";\nvar isWindowAvailable = windowAvailable();\nvar isPushStateAvailable = pushStateAvailable();\nexport default function updateBrowserURL(context, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"updateBrowserURL\")) {\n    var value = (\"/\" + context.to).replace(/\\/\\//g, \"/\"); // making sure that we don't have two slashes\n\n    var isItUsingHash = isWindowAvailable && context.resolveOptions && context.resolveOptions.hash === true;\n\n    if (isPushStateAvailable) {\n      history[context.navigateOptions.historyAPIMethod || \"pushState\"](context.navigateOptions.stateObj || {}, context.navigateOptions.title || \"\", isItUsingHash ? \"#\" + value : value); // This is to solve a nasty bug where the page doesn't scroll to the anchor.\n      // We set a microtask to update the hash only.\n\n      if (location && location.hash) {\n        context.instance.__freezeListening = true;\n        setTimeout(function () {\n          if (!isItUsingHash) {\n            var tmp = location.hash;\n            location.hash = \"\";\n            location.hash = tmp;\n          }\n\n          context.instance.__freezeListening = false;\n        }, 1);\n      }\n    } else if (isWindowAvailable) {\n      window.location.href = context.to;\n    }\n  }\n\n  done();\n}", "import Q from \"../Q\";\nimport { undefinedOrTrue } from \"../utils\";\nexport default function checkForLeaveHook(context, done) {\n  var instance = context.instance;\n\n  if (!instance.lastResolved()) {\n    done();\n    return;\n  }\n\n  Q(instance.lastResolved().map(function (oldMatch) {\n    return function (_, leaveLoopDone) {\n      // no leave hook\n      if (!oldMatch.route.hooks || !oldMatch.route.hooks.leave) {\n        leaveLoopDone();\n        return;\n      }\n\n      var runHook = false;\n      var newLocationVSOldMatch = context.instance.matchLocation(oldMatch.route.path, context.currentLocationPath, false);\n\n      if (oldMatch.route.path !== \"*\") {\n        runHook = !newLocationVSOldMatch;\n      } else {\n        var someOfTheLastOnesMatch = context.matches ? context.matches.find(function (match) {\n          return oldMatch.route.path === match.route.path;\n        }) : false;\n        runHook = !someOfTheLastOnesMatch;\n      }\n\n      if (undefinedOrTrue(context.navigateOptions, \"callHooks\") && runHook) {\n        Q(oldMatch.route.hooks.leave.map(function (f) {\n          // just so we match the Q interface\n          return function (_, d) {\n            return f(function (shouldStop) {\n              if (shouldStop === false) {\n                context.instance.__markAsClean(context);\n              } else {\n                d();\n              }\n            }, context.matches && context.matches.length > 0 ? context.matches.length === 1 ? context.matches[0] : context.matches : undefined);\n          };\n        }).concat([function () {\n          return leaveLoopDone();\n        }]));\n        return;\n      } else {\n        leaveLoopDone();\n      }\n    };\n  }), {}, function () {\n    return done();\n  });\n}", "import Q from \"../Q\";\nimport { undefinedOrTrue } from \"../utils\";\nexport default function checkForBeforeHook(context, done) {\n  if (context.match.route.hooks && context.match.route.hooks.before && undefinedOrTrue(context.navigateOptions, \"callHooks\")) {\n    Q(context.match.route.hooks.before.map(function (f) {\n      // just so we match the Q interface\n      return function beforeHookInternal(_, d) {\n        return f(function (shouldStop) {\n          if (shouldStop === false) {\n            context.instance.__markAsClean(context);\n          } else {\n            d();\n          }\n        }, context.match);\n      };\n    }).concat([function () {\n      return done();\n    }]));\n  } else {\n    done();\n  }\n}", "import { undefinedOrTrue } from \"../utils\";\nexport default function callHandler(context, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"callHandler\")) {\n    context.match.route.handler(context.match);\n  }\n\n  context.instance.updatePageLinks();\n  done();\n}", "import { undefinedOrTrue } from \"../utils\";\nexport default function checkForAfterHook(context, done) {\n  if (context.match.route.hooks && context.match.route.hooks.after && undefinedOrTrue(context.navigateOptions, \"callHooks\")) {\n    context.match.route.hooks.after.forEach(function (f) {\n      return f(context.match);\n    });\n  }\n\n  done();\n}", "import { undefinedOrTrue } from \"../utils\";\nexport default function checkForAlreadyHook(context, done) {\n  var current = context.instance.lastResolved();\n\n  if (current && current[0] && current[0].route === context.match.route && current[0].url === context.match.url && current[0].queryString === context.match.queryString) {\n    current.forEach(function (c) {\n      if (c.route.hooks && c.route.hooks.already) {\n        if (undefinedOrTrue(context.navigateOptions, \"callHooks\")) {\n          c.route.hooks.already.forEach(function (f) {\n            return f(context.match);\n          });\n        }\n      }\n    });\n    done(false);\n    return;\n  }\n\n  done();\n}", "import { parseQuery, extractGETParameters, clean, extractHashFromURL } from \"../utils\";\nexport default function checkForNotFoundHandler(context, done) {\n  var notFoundRoute = context.instance._notFoundRoute;\n\n  if (notFoundRoute) {\n    context.notFoundHandled = true;\n\n    var _extractGETParameters = extractGETParameters(context.currentLocationPath),\n        url = _extractGETParameters[0],\n        queryString = _extractGETParameters[1];\n\n    var hashString = extractHashFromURL(context.to);\n    notFoundRoute.path = clean(url);\n    var notFoundMatch = {\n      url: notFoundRoute.path,\n      queryString: queryString,\n      hashString: hashString,\n      data: null,\n      route: notFoundRoute,\n      params: queryString !== \"\" ? parseQuery(queryString) : null\n    };\n    context.matches = [notFoundMatch];\n    context.match = notFoundMatch;\n  }\n\n  done();\n}", "export default function errorOut(context, done) {\n  if (!context.resolveOptions || context.resolveOptions.noMatchWarning === false || typeof context.resolveOptions.noMatchWarning === \"undefined\") console.warn(\"Navigo: \\\"\" + context.currentLocationPath + \"\\\" didn't match any of the registered routes.\");\n  done();\n}", "export default function flushCurrent(context, done) {\n  context.instance._setCurrent(null);\n\n  done();\n}", "import { undefinedOrTrue } from \"../utils\";\nexport default function updateState(context, done) {\n  if (undefinedOrTrue(context.navigateOptions, \"updateState\")) {\n    context.instance._setCurrent(context.matches);\n  }\n\n  done();\n}", "import Q from \"./Q\";\nimport checkForLeaveHook from \"./middlewares/checkForLeaveHook\";\nimport checkForBeforeHook from \"./middlewares/checkForBeforeHook\";\nimport callHandler from \"./middlewares/callHandler\";\nimport checkForAfterHook from \"./middlewares/checkForAfterHook\";\nimport checkForAlreadyHook from \"./middlewares/checkForAlreadyHook\";\nimport checkForNotFoundHandler from \"./middlewares/checkForNotFoundHandler\";\nimport errorOut from \"./middlewares/errorOut\";\nimport flushCurrent from \"./middlewares/flushCurrent\";\nimport updateState from \"./middlewares/updateState\";\nexport var foundLifecycle = [checkForAlreadyHook, checkForBeforeHook, callHandler, checkForAfterHook];\nexport var notFoundLifeCycle = [checkForLeaveHook, checkForNotFoundHandler, Q[\"if\"](function (_ref) {\n  var notFoundHandled = _ref.notFoundHandled;\n  return notFoundHandled;\n}, foundLifecycle.concat([updateState]), [errorOut, flushCurrent])];", "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Q from \"../Q\";\nimport { foundLifecycle } from \"../lifecycles\";\nimport updateState from \"./updateState\";\nimport checkForLeaveHook from \"./checkForLeaveHook\";\nexport default function processMatches(context, done) {\n  var idx = 0;\n\n  function nextMatch() {\n    if (idx === context.matches.length) {\n      updateState(context, done);\n      return;\n    }\n\n    Q(foundLifecycle, _extends({}, context, {\n      match: context.matches[idx]\n    }), function end() {\n      idx += 1;\n      nextMatch();\n    });\n  }\n\n  checkForLeaveHook(context, nextMatch);\n}", "export default function waitingList(context) {\n  context.instance.__markAsClean(context);\n}", "function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { pushStateAvailable, matchRoute, parseQuery, extractGETParameters, isFunction, isString, clean, parseNavigateOptions, windowAvailable, getCurrentEnvURL, accumulateHooks, extractHashFromURL } from \"./utils\";\nimport Q from \"./Q\";\nimport setLocationPath from \"./middlewares/setLocationPath\";\nimport matchPathToRegisteredRoutes from \"./middlewares/matchPathToRegisteredRoutes\";\nimport checkForDeprecationMethods from \"./middlewares/checkForDeprecationMethods\";\nimport checkForForceOp from \"./middlewares/checkForForceOp\";\nimport updateBrowserURL from \"./middlewares/updateBrowserURL\";\nimport processMatches from \"./middlewares/processMatches\";\nimport waitingList from \"./middlewares/waitingList\";\nimport { notFoundLifeCycle } from \"./lifecycles\";\nvar DEFAULT_LINK_SELECTOR = \"[data-navigo]\";\nexport default function Navigo(appRoute, options) {\n  var DEFAULT_RESOLVE_OPTIONS = options || {\n    strategy: \"ONE\",\n    hash: false,\n    noMatchWarning: false,\n    linksSelector: DEFAULT_LINK_SELECTOR\n  };\n  var self = this;\n  var root = \"/\";\n  var current = null;\n  var routes = [];\n  var destroyed = false;\n  var genericHooks;\n  var isPushStateAvailable = pushStateAvailable();\n  var isWindowAvailable = windowAvailable();\n\n  if (!appRoute) {\n    console.warn('Navigo requires a root path in its constructor. If not provided will use \"/\" as default.');\n  } else {\n    root = clean(appRoute);\n  }\n\n  function _checkForAHash(url) {\n    if (url.indexOf(\"#\") >= 0) {\n      if (DEFAULT_RESOLVE_OPTIONS.hash === true) {\n        url = url.split(\"#\")[1] || \"/\";\n      } else {\n        url = url.split(\"#\")[0];\n      }\n    }\n\n    return url;\n  }\n\n  function composePathWithRoot(path) {\n    return clean(root + \"/\" + clean(path));\n  }\n\n  function createRoute(path, handler, hooks, name) {\n    path = isString(path) ? composePathWithRoot(path) : path;\n    return {\n      name: name || clean(String(path)),\n      path: path,\n      handler: handler,\n      hooks: accumulateHooks(hooks)\n    };\n  } // public APIs\n\n\n  function on(path, handler, hooks) {\n    var _this = this;\n\n    if (typeof path === \"object\" && !(path instanceof RegExp)) {\n      Object.keys(path).forEach(function (p) {\n        if (typeof path[p] === \"function\") {\n          _this.on(p, path[p]);\n        } else {\n          var _path$p = path[p],\n              _handler = _path$p.uses,\n              name = _path$p.as,\n              _hooks = _path$p.hooks;\n          routes.push(createRoute(p, _handler, [genericHooks, _hooks], name));\n        }\n      });\n      return this;\n    } else if (typeof path === \"function\") {\n      hooks = handler;\n      handler = path;\n      path = root;\n    }\n\n    routes.push(createRoute(path, handler, [genericHooks, hooks]));\n    return this;\n  }\n\n  function resolve(to, options) {\n    if (self.__dirty) {\n      self.__waiting.push(function () {\n        return self.resolve(to, options);\n      });\n\n      return;\n    } else {\n      self.__dirty = true;\n    }\n\n    to = to ? clean(root) + \"/\" + clean(to) : undefined; // console.log(\"-- resolve --> \" + to, self.__dirty);\n\n    var context = {\n      instance: self,\n      to: to,\n      currentLocationPath: to,\n      navigateOptions: {},\n      resolveOptions: _extends({}, DEFAULT_RESOLVE_OPTIONS, options)\n    };\n    Q([setLocationPath, matchPathToRegisteredRoutes, Q[\"if\"](function (_ref) {\n      var matches = _ref.matches;\n      return matches && matches.length > 0;\n    }, processMatches, notFoundLifeCycle)], context, waitingList);\n    return context.matches ? context.matches : false;\n  }\n\n  function navigate(to, navigateOptions) {\n    // console.log(\"-- navigate --> \" + to, self.__dirty);\n    if (self.__dirty) {\n      self.__waiting.push(function () {\n        return self.navigate(to, navigateOptions);\n      });\n\n      return;\n    } else {\n      self.__dirty = true;\n    }\n\n    to = clean(root) + \"/\" + clean(to);\n    var context = {\n      instance: self,\n      to: to,\n      navigateOptions: navigateOptions || {},\n      resolveOptions: navigateOptions && navigateOptions.resolveOptions ? navigateOptions.resolveOptions : DEFAULT_RESOLVE_OPTIONS,\n      currentLocationPath: _checkForAHash(to)\n    };\n    Q([checkForDeprecationMethods, checkForForceOp, matchPathToRegisteredRoutes, Q[\"if\"](function (_ref2) {\n      var matches = _ref2.matches;\n      return matches && matches.length > 0;\n    }, processMatches, notFoundLifeCycle), updateBrowserURL, waitingList], context, waitingList);\n  }\n\n  function navigateByName(name, data, options) {\n    var url = generate(name, data);\n\n    if (url !== null) {\n      navigate(url.replace(new RegExp(\"^/?\" + root), \"\"), options);\n      return true;\n    }\n\n    return false;\n  }\n\n  function off(what) {\n    this.routes = routes = routes.filter(function (r) {\n      if (isString(what)) {\n        return clean(r.path) !== clean(what);\n      } else if (isFunction(what)) {\n        return what !== r.handler;\n      }\n\n      return String(r.path) !== String(what);\n    });\n    return this;\n  }\n\n  function listen() {\n    if (isPushStateAvailable) {\n      this.__popstateListener = function () {\n        if (!self.__freezeListening) {\n          resolve();\n        }\n      };\n\n      window.addEventListener(\"popstate\", this.__popstateListener);\n    }\n  }\n\n  function destroy() {\n    this.routes = routes = [];\n\n    if (isPushStateAvailable) {\n      window.removeEventListener(\"popstate\", this.__popstateListener);\n    }\n\n    this.destroyed = destroyed = true;\n  }\n\n  function notFound(handler, hooks) {\n    self._notFoundRoute = createRoute(\"*\", handler, [genericHooks, hooks], \"__NOT_FOUND__\");\n    return this;\n  }\n\n  function updatePageLinks() {\n    if (!isWindowAvailable) return;\n    findLinks().forEach(function (link) {\n      if (\"false\" === link.getAttribute(\"data-navigo\") || \"_blank\" === link.getAttribute(\"target\")) {\n        if (link.hasListenerAttached) {\n          link.removeEventListener(\"click\", link.navigoHandler);\n        }\n\n        return;\n      }\n\n      if (!link.hasListenerAttached) {\n        link.hasListenerAttached = true;\n\n        link.navigoHandler = function (e) {\n          if ((e.ctrlKey || e.metaKey) && e.target.tagName.toLowerCase() === \"a\") {\n            return false;\n          }\n\n          var location = link.getAttribute(\"href\");\n\n          if (typeof location === \"undefined\" || location === null) {\n            return false;\n          } // handling absolute paths\n\n\n          if (location.match(/^(http|https)/) && typeof URL !== \"undefined\") {\n            try {\n              var u = new URL(location);\n              location = u.pathname + u.search;\n            } catch (err) {}\n          }\n\n          var options = parseNavigateOptions(link.getAttribute(\"data-navigo-options\"));\n\n          if (!destroyed) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.navigate(clean(location), options);\n          }\n        };\n\n        link.addEventListener(\"click\", link.navigoHandler);\n      }\n    });\n    return self;\n  }\n\n  function findLinks() {\n    if (isWindowAvailable) {\n      return [].slice.call(document.querySelectorAll(DEFAULT_RESOLVE_OPTIONS.linksSelector || DEFAULT_LINK_SELECTOR));\n    }\n\n    return [];\n  }\n\n  function link(path) {\n    return \"/\" + root + \"/\" + clean(path);\n  }\n\n  function setGenericHooks(hooks) {\n    genericHooks = hooks;\n    return this;\n  }\n\n  function lastResolved() {\n    return current;\n  }\n\n  function generate(name, data, options) {\n    var route = routes.find(function (r) {\n      return r.name === name;\n    });\n    var result = null;\n\n    if (route) {\n      result = route.path;\n\n      if (data) {\n        for (var key in data) {\n          result = result.replace(\":\" + key, data[key]);\n        }\n      }\n\n      result = !result.match(/^\\//) ? \"/\" + result : result;\n    }\n\n    if (result && options && !options.includeRoot) {\n      result = result.replace(new RegExp(\"^/\" + root), \"\");\n    }\n\n    return result;\n  }\n\n  function getLinkPath(link) {\n    return link.getAttribute(\"href\");\n  }\n\n  function pathToMatchObject(path) {\n    var _extractGETParameters = extractGETParameters(clean(path)),\n        url = _extractGETParameters[0],\n        queryString = _extractGETParameters[1];\n\n    var params = queryString === \"\" ? null : parseQuery(queryString);\n    var hashString = extractHashFromURL(path);\n    var route = createRoute(url, function () {}, [genericHooks], url);\n    return {\n      url: url,\n      queryString: queryString,\n      hashString: hashString,\n      route: route,\n      data: null,\n      params: params\n    };\n  }\n\n  function getCurrentLocation() {\n    return pathToMatchObject(clean(getCurrentEnvURL(root)).replace(new RegExp(\"^\" + root), \"\"));\n  }\n\n  function directMatchWithRegisteredRoutes(path) {\n    var context = {\n      instance: self,\n      currentLocationPath: path,\n      to: path,\n      navigateOptions: {},\n      resolveOptions: DEFAULT_RESOLVE_OPTIONS\n    };\n    matchPathToRegisteredRoutes(context, function () {});\n    return context.matches ? context.matches : false;\n  }\n\n  function directMatchWithLocation(path, currentLocation, annotatePathWithRoot) {\n    if (typeof currentLocation !== \"undefined\" && (typeof annotatePathWithRoot === \"undefined\" || annotatePathWithRoot)) {\n      currentLocation = composePathWithRoot(currentLocation);\n    }\n\n    var context = {\n      instance: self,\n      to: currentLocation,\n      currentLocationPath: currentLocation\n    };\n    setLocationPath(context, function () {});\n\n    if (typeof path === \"string\") {\n      path = typeof annotatePathWithRoot === \"undefined\" || annotatePathWithRoot ? composePathWithRoot(path) : path;\n    }\n\n    var match = matchRoute(context, {\n      name: String(path),\n      path: path,\n      handler: function handler() {},\n      hooks: {}\n    });\n    return match ? match : false;\n  }\n\n  function addHook(type, route, func) {\n    if (typeof route === \"string\") {\n      route = getRoute(route);\n    }\n\n    if (route) {\n      if (!route.hooks[type]) route.hooks[type] = [];\n      route.hooks[type].push(func);\n      return function () {\n        route.hooks[type] = route.hooks[type].filter(function (f) {\n          return f !== func;\n        });\n      };\n    } else {\n      console.warn(\"Route doesn't exists: \" + route);\n    }\n\n    return function () {};\n  }\n\n  function getRoute(nameOrHandler) {\n    if (typeof nameOrHandler === \"string\") {\n      return routes.find(function (r) {\n        return r.name === composePathWithRoot(nameOrHandler);\n      });\n    }\n\n    return routes.find(function (r) {\n      return r.handler === nameOrHandler;\n    });\n  }\n\n  function __markAsClean(context) {\n    context.instance.__dirty = false;\n\n    if (context.instance.__waiting.length > 0) {\n      context.instance.__waiting.shift()();\n    }\n  }\n\n  this.root = root;\n  this.routes = routes;\n  this.destroyed = destroyed;\n  this.current = current;\n  this.__freezeListening = false;\n  this.__waiting = [];\n  this.__dirty = false;\n  this.__markAsClean = __markAsClean;\n  this.on = on;\n  this.off = off;\n  this.resolve = resolve;\n  this.navigate = navigate;\n  this.navigateByName = navigateByName;\n  this.destroy = destroy;\n  this.notFound = notFound;\n  this.updatePageLinks = updatePageLinks;\n  this.link = link;\n  this.hooks = setGenericHooks;\n\n  this.extractGETParameters = function (url) {\n    return extractGETParameters(_checkForAHash(url));\n  };\n\n  this.lastResolved = lastResolved;\n  this.generate = generate;\n  this.getLinkPath = getLinkPath;\n  this.match = directMatchWithRegisteredRoutes;\n  this.matchLocation = directMatchWithLocation;\n  this.getCurrentLocation = getCurrentLocation;\n  this.addBeforeHook = addHook.bind(this, \"before\");\n  this.addAfterHook = addHook.bind(this, \"after\");\n  this.addAlreadyHook = addHook.bind(this, \"already\");\n  this.addLeaveHook = addHook.bind(this, \"leave\");\n  this.getRoute = getRoute;\n  this._pathToMatchObject = pathToMatchObject;\n  this._clean = clean;\n  this._checkForAHash = _checkForAHash;\n\n  this._setCurrent = function (c) {\n    return current = self.current = c;\n  };\n\n  listen.call(this);\n  updatePageLinks.call(this);\n}", "import d from \"./node_modules/navigo/lib/es/index.js\";export default d;"],
  "mappings": "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",
  "names": []
}
